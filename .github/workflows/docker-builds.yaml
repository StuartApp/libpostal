name: docker builds
on: [push, pull_request]

env:
  DOCKER_IMAGE_BASENAME: libpostal
  BASE_IMAGES: "ruby:2.4.9-stretch ubuntu:16.04 ubuntu:18.04"


jobs:
  build:
    name: Build OS packages inside a docker container and create release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Make git short-commit available for the different steps
      id: metadata
      run: |
        echo "::set-output name=commit::$(echo ${GITHUB_SHA} | head -c7)"
        echo "::set-output name=version::$(sed 's|^v||' versions/parser)"
    - name: Build
      run: |
        pwd
        ls -hal
        git status -sb
        mkdir release-files
        for base_image in ${BASE_IMAGES}
        do
          FS_SANITIZED_BASE_IMAGE=$(echo ${base_image} | sed 's|:|_|g')
          OUTPUT_DIR=output-${FS_SANITIZED_BASE_IMAGE}

          docker build \
            --build-arg BASE_IMAGE=${base_image} \
            -t ${DOCKER_IMAGE_BASENAME}/${base_image} .

          CID=$(docker create ${DOCKER_IMAGE_BASENAME}/${base_image})
          docker cp ${CID}:/output ${OUTPUT_DIR}

          DEB_FILE=$(ls ${OUTPUT_DIR}/*deb)
          DATA_FILE=$(ls ${OUTPUT_DIR}/*gz)
          mv ${DEB_FILE} release-files/${FS_SANITIZED_BASE_IMAGE}-$(basename ${DEB_FILE})
          mv ${DATA_FILE} release-files/${FS_SANITIZED_BASE_IMAGE}-$(basename ${DATA_FILE})
        done
    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_NAME: "Release ${{ steps.metadata.outputs.version }}-${{ steps.metadata.outputs.commit }}"
        RELEASE_NOTES: "Automatic release from GH action on this project."
      run: |
        sudo gem install --no-document dpl --pre
        dpl \
          --slug ${GITHUB_REPOSITORY} \
          --token ${GITHUB_TOKEN} \
          --name ${RELEASE_NAME} \
          --release_notes ${RELEASE_NOTES} \
          --overwrite \
          --file release-files/* 
