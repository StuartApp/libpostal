name: docker builds
on: [push, pull_request]

jobs:
  build:
    name: Build OS packages inside a docker container
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      env:
        DOCKER_IMAGE_NAME: stuart/libpostal
      run: |
        pwd
        ls -hal
        git status -sb
        docker build -t ${DOCKER_IMAGE_NAME} .
        CID=$(docker create ${DOCKER_IMAGE_NAME})
        mkdir output
        docker cp ${CID}:/output/*deb output/
        docker cp ${CID}:/output/*tgz output/
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: output-artifacts
        path: output
  release:
    name: Release OS packages+data on GH Releases
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v1
        with:
          name: output-artifacts
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Automatically generated by GH action on this project
          draft: false
          prerelease: false
      - name: Upload .deb package release asset
        id: upload-deb-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./output/*deb
          asset_name: libpostal_1.0.0+{{ github.ref }}_amd64.deb #FIXME: find a way to dynamically set upstream version
          asset_content_type: application/vnd.debian.binary-package
      - name: Upload data release asset
        id: upload-data-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./output/*tgz
          asset_name: address_parser-1.0.0+{{ github.ref }}.tar.gz #FIXME: find a way to dynamically set upstream version
          asset_content_type: application/tar+gzip
